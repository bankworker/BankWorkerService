<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.johnny.bankworker.mapper.BankBranchStaffAccountMapper" >
  <resultMap id="BaseResultMap" type="com.johnny.bankworker.entity.BankBranchStaffAccountEntity" >
    <id column="account_id" property="accountID" jdbcType="INTEGER" />
    <result column="bank_code" property="bankCode" jdbcType="VARCHAR" />
    <result column="bank_name" property="bankName" jdbcType="VARCHAR" />
    <result column="branch_code" property="branchCode" jdbcType="VARCHAR" />
    <result column="branch_name" property="branchName" jdbcType="VARCHAR" />
    <result column="system_id" property="systemID" jdbcType="INTEGER" />
    <result column="system_name" property="systemName" jdbcType="VARCHAR" />
    <result column="staff_account" property="account" jdbcType="VARCHAR" />
    <result column="staff_id" property="staffID" jdbcType="INTEGER" />
    <result column="staff_name" property="staffName" jdbcType="VARCHAR" />
    <result column="staff_post_id" property="staffPostID" jdbcType="INTEGER" />
    <result column="staff_post_name" property="staffPostName" jdbcType="VARCHAR" />
    <result column="staff_password" property="password" jdbcType="VARCHAR" />
    <result column="staff_photo_url" property="staffPhotoUrl" jdbcType="VARCHAR" />
    <result column="data_status" property="dataStatus" jdbcType="VARCHAR" />
    <result column="data_status_text" property="dataStatusText" jdbcType="VARCHAR" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <select id="searchTotalCount" parameterType="string" resultType="java.lang.Integer">
    SELECT
    COUNT(1) AS TotalCount
    FROM bank_worker_base.bank_branch_staff_account
    WHERE 1=1
    <if test="dataStatus != null">
      AND data_status = #{dataStatus,jdbcType=VARCHAR}
    </if>;
  </select>
  <select id="searchList" resultMap="BaseResultMap">
    SELECT
      A.account_id,
      A.bank_code,
      D.bank_name,
      A.branch_code,
      E.branch_name,
      A.system_id,
      C.system_name,
      A.staff_account,
      A.staff_password,
      A.data_status,
      CASE WHEN A.data_status = 'N' THEN '正常'
        WHEN A.data_status = 'F' THEN '冻结'
        WHEN A.data_status = 'D' THEN '删除'
        ELSE '未知数据状态'
      END AS data_status_text,
      B.admin_name AS create_user,
      DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,
      B.admin_name AS update_user,
      DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time
    FROM bank_worker_base.bank_branch_staff_account A
    LEFT JOIN bank_worker_base.system_admin B
    ON A.create_user = B.admin_id
    LEFT JOIN bank_worker_base.system_setting C
    ON A.system_id = C.system_id
    LEFT JOIN bank_worker_base.bank D
    ON A.bank_code = D.bank_code
    LEFT JOIN bank_worker_base.bank_branch E
    ON A.branch_code = E.branch_code
    WHERE 1=1
    <if test="arg2 != null">
      AND A.data_status = #{arg2,jdbcType=VARCHAR}
    </if>
    ORDER BY A.update_time DESC
    LIMIT #{arg0,jdbcType=INTEGER}, #{arg1,jdbcType=INTEGER};
  </select>
  <select id="searchByID" resultMap="BaseResultMap">
    SELECT
      A.account_id,
      A.bank_code,
      D.bank_name,
      A.branch_code,
      E.branch_name,
      A.system_id,
      C.system_name,
      A.staff_account,
      A.staff_password,
      A.data_status,
      CASE WHEN A.data_status = 'N' THEN '正常'
        WHEN A.data_status = 'F' THEN '冻结'
        WHEN A.data_status = 'D' THEN '删除'
        ELSE '未知数据状态'
      END AS data_status_text,
      B.admin_name AS create_user,
      DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,
      B.admin_name AS update_user,
      DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time
    FROM bank_worker_base.bank_branch_staff_account A
    LEFT JOIN bank_worker_base.system_admin B
    ON A.create_user = B.admin_id
    LEFT JOIN bank_worker_base.system_setting C
    ON A.system_id = C.system_id
    LEFT JOIN bank_worker_base.bank D
    ON A.bank_code = D.bank_code
    LEFT JOIN bank_worker_base.bank_branch E
    ON A.branch_code = E.branch_code
    WHERE A.account_id = #{arg0,jdbcType=INTEGER}
    AND A.data_status = #{arg1,jdbcType=VARCHAR};
  </select>

  <select id="login" resultMap="BaseResultMap">
    SELECT
      A.account_id,
      A.bank_code,
      D.bank_name,
      A.branch_code,
      E.branch_name,
      A.system_id,
      C.system_name,
      A.staff_account,
      E.branch_name AS staff_name,
      A.data_status,
      CASE WHEN A.data_status = 'N' THEN '正常'
      WHEN A.data_status = 'F' THEN '冻结'
      WHEN A.data_status = 'D' THEN '删除'
      ELSE '未知数据状态'
      END AS data_status_text,
      B.admin_name AS create_user,
      DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,
      B.admin_name AS update_user,
      DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time
    FROM bank_worker_base.bank_branch_staff_account A
    INNER JOIN bank_worker_base.system_admin B
    ON A.create_user = B.admin_id
    INNER JOIN bank_worker_base.system_setting C
    ON A.system_id = C.system_id
    INNER JOIN bank_worker_base.bank D
    ON A.bank_code = D.bank_code
    AND D.data_status = 'N'
    INNER JOIN bank_worker_base.bank_branch E
    ON A.bank_code = E.bank_code
    AND A.branch_code = E.branch_code
    AND E.data_status = 'N'
    WHERE A.staff_account = #{arg0,jdbcType=VARCHAR}
    AND A.staff_password = #{arg1,jdbcType=VARCHAR}
    AND A.system_id = #{arg2,jdbcType=VARCHAR}
    AND A.data_status = 'N';
  </select>

  <select id="loginBalance" resultMap="BaseResultMap">
    SELECT
      B.account_id,
      A.staff_id,
      A.bank_code,
      A.branch_code,
      B.system_id,
      A.staff_name,
      A.staff_cellphone AS staff_account,
      A.staff_post_id,
      C.staff_post_name,
      A.staff_photo_url,
      A.staff_resume_url
    FROM
    (
      SELECT
        A.staff_id,
        A.bank_code,
        A.branch_code,
        A.staff_name,
        A.staff_cellphone,
        A.staff_post_id,
        A.staff_photo_url,
        A.staff_resume_url
      FROM bank_worker_base.bank_branch_staff A
      WHERE A.bank_code = #{arg0,jdbcType=VARCHAR}
      AND A.branch_code = #{arg1,jdbcType=VARCHAR}
        AND A.staff_post_id = #{arg2,jdbcType=INTEGER}
      AND A.staff_cellphone = #{arg3,jdbcType=VARCHAR}
    ) A
    INNER JOIN bank_worker_base.bank_branch_staff_account B
    ON A.bank_code = B.bank_code
    AND A.branch_code = B.branch_code
    AND A.staff_cellphone = B.staff_account
    AND B.data_status = 'N'
    INNER JOIN bank_worker_base.staff_post_setting C
    ON A.bank_code = C.bank_code
    AND A.branch_code = C.branch_code
    AND A.staff_post_id = C.staff_post_id
    WHERE B.system_id = 2
    AND B.staff_password = #{arg4,jdbcType=VARCHAR};
  </select>

  <select id="searchAuthorizedSystem" resultMap="BaseResultMap">
    SELECT
      A.bank_code,
      A.branch_code,
      A.system_id,
      C.system_name
    FROM bank_worker_base.bank_branch_staff_account A
    LEFT JOIN bank_worker_base.system_admin B
    ON A.create_user = B.admin_id
    LEFT JOIN bank_worker_base.system_setting C
    ON A.system_id = C.system_id
    LEFT JOIN bank_worker_base.bank D
    ON A.bank_code = D.bank_code
    LEFT JOIN bank_worker_base.bank_branch E
    ON A.branch_code = E.branch_code
    LEFT JOIN bank_worker_base.bank_branch_staff F
    ON A.staff_account = F.staff_cellphone
    WHERE A.bank_code = #{arg0,jdbcType=VARCHAR}
    AND A.branch_code = #{arg1,jdbcType=VARCHAR}
    AND A.data_status = 'N'
    GROUP BY A.system_id
    ORDER BY A.system_id;
  </select>

  <select id="existCheck" resultType="java.lang.Integer">

  </select>
  <insert id="insert" parameterType="com.johnny.bankworker.entity.BankBranchStaffAccountEntity" >
    INSERT INTO bank_worker_base.bank_branch_staff_account (
      bank_code,
      branch_code,
      system_id,
      staff_account,
      staff_password,
      data_status,
      create_user,
      update_user
    )
    VALUES (
      #{bankCode, jdbcType=VARCHAR},
      #{branchCode, jdbcType=VARCHAR},
      #{systemID, jdbcType=INTEGER},
      #{account, jdbcType=VARCHAR},
      #{password, jdbcType=VARCHAR},
      'N',
      #{createUser, jdbcType=VARCHAR},
      #{updateUser, jdbcType=VARCHAR}
    )
  </insert>
  <update id="update" parameterType="com.johnny.bankworker.entity.BankBranchStaffAccountEntity" >
    UPDATE bank_worker_base.bank_branch_staff_account SET
      staff_account = #{account,jdbcType=VARCHAR},
      staff_password = #{password,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR}
    WHERE account_id = #{accountID,jdbcType=INTEGER}
  </update>
  <update id="updatePassword" parameterType="com.johnny.bankworker.entity.BankBranchStaffAccountEntity" >
    UPDATE bank_worker_base.bank_branch_staff_account SET
      staff_password = #{password,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR}
    WHERE bank_code = #{bankCode,jdbcType=VARCHAR}
    AND branch_code = #{branchCode,jdbcType=VARCHAR}
    AND system_id = #{systemID,jdbcType=INTEGER}
    AND staff_account = #{account,jdbcType=VARCHAR}
  </update>
  <update id="updateByAccount" parameterType="com.johnny.bankworker.entity.BankBranchStaffAccountEntity" >
    UPDATE bank_worker_base.bank_branch_staff_account SET
      staff_account = #{account,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR}
    WHERE bank_code = #{bankCode, jdbcType=VARCHAR}
    AND branch_code = #{branchCode,jdbcType=VARCHAR}
    AND staff_account = #{accountOriginal,jdbcType=VARCHAR}
    AND system_id = #{systemID,jdbcType=VARCHAR};
  </update>

  <update id="updateDataStatus" parameterType="com.johnny.bankworker.entity.BankBranchStaffAccountEntity" >
    UPDATE bank_worker_base.bank_branch_staff_account SET
      data_status = #{dataStatus,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR}
    WHERE account_id = #{accountID,jdbcType=INTEGER}
  </update>
  <delete id="delete" parameterType="java.lang.Integer" >
    DELETE FROM bank_worker_base.bank_branch_staff_account
    WHERE account_id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByAccount" parameterType="com.johnny.bankworker.entity.BankBranchStaffAccountEntity" >
    DELETE FROM bank_worker_base.bank_branch_staff_account
    WHERE bank_code = #{bankCode, jdbcType=VARCHAR}
    AND branch_code = #{branchCode,jdbcType=VARCHAR}
    AND staff_account = #{account,jdbcType=VARCHAR}
    AND system_id = #{systemID,jdbcType=VARCHAR};
  </delete>
</mapper>