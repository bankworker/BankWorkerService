<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.johnny.bankworker.mapper.BranchArchiveMapper" >
  <resultMap id="BaseResultMap" type="com.johnny.bankworker.entity.BranchArchiveEntity" >
    <id column="archive_id" property="archiveID" jdbcType="INTEGER" />
    <result column="bank_code" property="bankCode" jdbcType="VARCHAR" />
    <result column="branch_code" property="branchCode" jdbcType="VARCHAR" />
    <result column="archive_parent_id" property="archiveParentID" jdbcType="INTEGER" />
    <result column="archive_name" property="archiveName" jdbcType="VARCHAR" />
    <result column="archive_type" property="archiveType" jdbcType="VARCHAR" />
    <result column="archive_order" property="archiveOrder" jdbcType="INTEGER" />
    <result column="data_status" property="dataStatus" jdbcType="VARCHAR" />
    <result column="data_status_text" property="dataStatusText" jdbcType="VARCHAR" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <select id="searchTotalCount4Branch" parameterType="string" resultType="java.lang.Integer">
    SELECT
    COUNT(1) AS TotalCount
    FROM bank_worker_archives.branch_archives
    WHERE bank_code = #{arg0,jdbcType=VARCHAR}
    AND branch_code = #{arg1,jdbcType=VARCHAR};
  </select>
  <select id="searchList4Branch" resultMap="BaseResultMap">
    SELECT
      A.archive_id,
      A.bank_code,
      A.branch_code,
      A.archive_parent_id,
      A.archive_name,
      A.archive_type,
      A.archive_order,
      A.data_status,
      IFNULL(B.staff_name, '管理员') AS create_user,
      DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,
      IFNULL(C.staff_name, '管理员') AS update_user,
      DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time
    FROM bank_worker_archives.branch_archives A
    LEFT JOIN bank_worker_base.bank_branch_staff B
    ON A.create_user = B.staff_cellphone
    LEFT JOIN bank_worker_base.bank_branch_staff C
    ON A.update_user = C.staff_cellphone
    WHERE A.bank_code = #{arg2,jdbcType=VARCHAR}
    AND A.branch_code = #{arg3,jdbcType=VARCHAR}
    ORDER BY A.archive_order
    LIMIT #{arg0,jdbcType=INTEGER}, #{arg1,jdbcType=INTEGER};
  </select>
  <select id="searchByArchiveID" resultMap="BaseResultMap">
    SELECT
      A.archive_id,
      A.bank_code,
      A.branch_code,
      A.archive_parent_id,
      A.archive_name,
      A.archive_type,
      A.archive_order,
      IFNULL(B.staff_name, '管理员') AS create_user,
      DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,
      IFNULL(C.staff_name, '管理员') AS update_user,
      DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time
    FROM bank_worker_archives.branch_archives A
    LEFT JOIN bank_worker_base.bank_branch_staff B
    ON A.create_user = B.staff_cellphone
    LEFT JOIN bank_worker_base.bank_branch_staff C
    ON A.update_user = C.staff_cellphone
    WHERE A.bank_code = #{arg0,jdbcType=VARCHAR}
    AND A.branch_code = #{arg1,jdbcType=VARCHAR}
    AND A.archive_id = #{arg2,jdbcType=INTEGER}
    ORDER BY A.update_time;
  </select>

  <select id="existCheck" resultType="java.lang.Integer">
    SELECT
    COUNT(1) AS TotalCount
    FROM bank_worker_archives.branch_archives
    WHERE bank_code = #{arg0,jdbcType=VARCHAR}
    AND branch_code = #{arg1,jdbcType=VARCHAR}
    AND archive_name = #{arg2,jdbcType=VARCHAR};
  </select>
  <select id="searchByParentArchive" resultMap="BaseResultMap">
    SELECT
      A.archive_id,
      A.bank_code,
      A.branch_code,
      A.archive_parent_id,
      A.archive_name,
      A.archive_type,
      A.archive_order,
      IFNULL(B.staff_name, '管理员') AS create_user,
      DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,
      IFNULL(C.staff_name, '管理员') AS update_user,
      DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time
    FROM bank_worker_archives.branch_archives A
    LEFT JOIN bank_worker_base.bank_branch_staff B
    ON A.create_user = B.staff_cellphone
    LEFT JOIN bank_worker_base.bank_branch_staff C
    ON A.update_user = C.staff_cellphone
    WHERE A.bank_code = #{arg0,jdbcType=VARCHAR}
    AND A.branch_code = #{arg1,jdbcType=VARCHAR}
    AND A.archive_parent_id = #{arg2,jdbcType=INTEGER}
    ORDER BY A.update_time;
  </select>
  <select id="searchMaxOrder" resultType="java.lang.Integer">
    SELECT
    IFNULL(MAX(archive_order), 0) AS MaxOrder
    FROM bank_worker_archives.branch_archives
    WHERE bank_code = #{arg0,jdbcType=VARCHAR}
    AND branch_code = #{arg1,jdbcType=VARCHAR}
    AND archive_parent_id = #{arg2,jdbcType=INTEGER};
  </select>

  <insert id="insert" parameterType="com.johnny.bankworker.entity.BranchArchiveEntity" >
    INSERT INTO bank_worker_archives.branch_archives (
      bank_code,
      branch_code,
      archive_parent_id,
      archive_name,
      archive_type,
      archive_order,

      data_status,
      create_user,
      update_user
    )
    VALUES (
      #{bankCode, jdbcType=VARCHAR},
      #{branchCode, jdbcType=VARCHAR},
      #{archiveParentID, jdbcType=INTEGER},
      #{archiveName, jdbcType=VARCHAR},
      #{archiveType, jdbcType=VARCHAR},
      #{archiveOrder, jdbcType=INTEGER},
      'A',
      #{createUser, jdbcType=VARCHAR},
      #{updateUser, jdbcType=VARCHAR}
    )
  </insert>
  <update id="update" parameterType="com.johnny.bankworker.entity.BranchArchiveEntity" >
    UPDATE bank_worker_archives.branch_archives SET
      archive_name = #{archiveName,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR}
    WHERE bank_code = #{bankCode,jdbcType=VARCHAR}
    AND branch_code = #{branchCode,jdbcType=VARCHAR}
    AND archive_id = #{archiveID,jdbcType=INTEGER};
  </update>

  <update id="updateDataStatus" parameterType="com.johnny.bankworker.entity.BranchArchiveEntity" >
    UPDATE bank_worker_archives.branch_archives SET
      data_status = #{dataStatus,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR}
    WHERE bank_code = #{bankCode,jdbcType=VARCHAR}
    AND branch_code = #{branchCode,jdbcType=VARCHAR}
    AND archive_id = #{archiveID,jdbcType=INTEGER};
  </update>

  <update id="updatePosition" parameterType="com.johnny.bankworker.entity.BranchArchiveEntity" >
    UPDATE bank_worker_archives.branch_archives SET
      archive_parent_id = #{archiveParentID,jdbcType=INTEGER},
      update_user = #{updateUser,jdbcType=VARCHAR}
    WHERE bank_code = #{bankCode,jdbcType=VARCHAR}
    AND branch_code = #{branchCode,jdbcType=VARCHAR}
    AND archive_id = #{archiveID,jdbcType=INTEGER};
  </update>

  <update id="updateOrder" parameterType="com.johnny.bankworker.entity.BranchArchiveEntity" >
    UPDATE bank_worker_archives.branch_archives SET
      archive_order = #{archiveOrder,jdbcType=INTEGER},
      update_user = #{updateUser,jdbcType=VARCHAR}
    WHERE bank_code = #{bankCode,jdbcType=VARCHAR}
    AND branch_code = #{branchCode,jdbcType=VARCHAR}
    AND archive_id = #{archiveID,jdbcType=INTEGER};
  </update>

  <delete id="deleteArchive">
    DELETE FROM bank_worker_archives.branch_archives
    WHERE bank_code = #{arg0,jdbcType=VARCHAR}
    AND branch_code = #{arg1,jdbcType=VARCHAR}
    AND archive_id = #{arg2,jdbcType=INTEGER};
  </delete>
</mapper>