<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.johnny.bankworker.mapper.workerbalance.BusinessFlowMapper" >
  <resultMap id="BaseResultMap" type="com.johnny.bankworker.entity.BusinessFlowEntity" >
    <id column="business_id" property="businessID" jdbcType="INTEGER" />
    <result column="bank_code" property="bankCode" jdbcType="VARCHAR" />
    <result column="branch_code" property="branchCode" jdbcType="VARCHAR" />
    <result column="sender_id" property="senderID" jdbcType="INTEGER" />
    <result column="sender_name" property="senderName" jdbcType="VARCHAR" />
    <result column="sender_photo" property="senderPhoto" jdbcType="VARCHAR" />
    <result column="send_time" property="sendTime" jdbcType="TIMESTAMP" />
    <result column="receiver_id" property="receiverID" jdbcType="INTEGER" />
    <result column="receiver_name" property="receiverName" jdbcType="VARCHAR" />
    <result column="receive_time" property="receiveTime" jdbcType="TIMESTAMP" />
    <result column="business_status" property="businessStatus" jdbcType="VARCHAR" />
    <result column="business_status_text" property="businessStatusText" jdbcType="VARCHAR" />
    <result column="callback_id" property="callbackID" jdbcType="INTEGER" />
    <result column="callback_msg" property="callbackMsg" jdbcType="INTEGER" />
    <result column="complete_time" property="completeTime" jdbcType="TIMESTAMP" />
    <result column="data_status" property="dataStatus" jdbcType="VARCHAR" />
    <result column="data_status_text" property="dataStatusText" jdbcType="VARCHAR" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <select id="searchReceiveList" resultMap="BaseResultMap">
    SELECT
      A.business_id,
      A.bank_code,
      A.branch_code,
      A.sender_id,
      B.staff_name AS sender_name,
      B.staff_photo_url AS sender_photo,
      DATE_FORMAT(A.send_time, '%Y-%m-%d %H:%i:%s') AS send_time,
      A.receiver_id,
      C.staff_name AS receiver_name,
      DATE_FORMAT(A.receive_time, '%Y-%m-%d %H:%i:%s') AS receive_time,
      A.business_status,
      CASE WHEN A.business_status = '0' THEN '等待回复'
          WHEN A.business_status = '1' THEN '接单'
          WHEN A.business_status = '2' THEN '拒绝'
          WHEN A.business_status = '3' THEN '完成'
          WHEN A.business_status = '4' THEN '回呼'
          ELSE '未知数据状态'
      END AS business_status_text,
      A.callback_id,
      IFNULL(A.complete_time, '') AS complete_time,
      IFNULL(B.staff_name, '管理员') AS create_user,
      DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,
      IFNULL(B.staff_name, '管理员') AS update_user,
      DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time
    FROM bank_worker_balance.business_flow A
    LEFT JOIN bank_worker_base.bank_branch_staff B
    ON A.sender_id = B.staff_id
    AND A.bank_code = B.bank_code
    AND A.branch_code = B.branch_code
    LEFT JOIN bank_worker_base.bank_branch_staff C
    ON A.receiver_id = C.staff_id
    AND A.bank_code = C.bank_code
    AND A.branch_code = C.branch_code
    WHERE A.bank_code = #{arg0,jdbcType=VARCHAR}
    AND A.branch_code = #{arg1,jdbcType=VARCHAR}
    AND A.receiver_id = #{arg2,jdbcType=INTEGER}
    AND to_days(A.send_time) = to_days(now())
    ORDER BY A.update_time DESC;
  </select>

  <select id="searchNewReceiveInfo" resultMap="BaseResultMap">
    SELECT
      A.business_id,
      A.bank_code,
      A.branch_code,
      A.sender_id,
      B.staff_name AS sender_name,
      B.staff_photo_url AS sender_photo,
      DATE_FORMAT(A.send_time, '%Y-%m-%d %H:%i:%s') AS send_time,
      A.receiver_id,
      C.staff_name AS receiver_name,
      DATE_FORMAT(A.receive_time, '%Y-%m-%d %H:%i:%s') AS receive_time,
      A.business_status,
      CASE WHEN A.business_status = '0' THEN '等待回复'
          WHEN A.business_status = '1' THEN '接单'
          WHEN A.business_status = '2' THEN '拒绝'
          WHEN A.business_status = '3' THEN '完结'
          WHEN A.business_status = '4' THEN '回呼'
          ELSE '未知数据状态'
      END AS business_status_text,
      A.callback_id,
      IFNULL(A.complete_time, '') AS complete_time,
      IFNULL(B.staff_name, '管理员') AS create_user,
      DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,
      IFNULL(B.staff_name, '管理员') AS update_user,
      DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time
    FROM bank_worker_balance.business_flow A
    LEFT JOIN bank_worker_base.bank_branch_staff B
    ON A.sender_id = B.staff_id
    AND A.bank_code = B.bank_code
    AND A.branch_code = B.branch_code
    LEFT JOIN bank_worker_base.bank_branch_staff C
    ON A.receiver_id = C.staff_id
    AND A.bank_code = C.bank_code
    AND A.branch_code = C.branch_code
    WHERE A.bank_code = #{arg0,jdbcType=VARCHAR}
    AND A.branch_code = #{arg1,jdbcType=VARCHAR}
    AND A.receiver_id = #{arg2,jdbcType=INTEGER}
    AND A.business_status = '0'
    AND to_days(A.send_time) = to_days(now())
    ORDER BY A.update_time DESC
    LIMIT 0, 1;
  </select>

  <select id="searchSendList" resultMap="BaseResultMap">
    SELECT
      A.business_id,
      A.bank_code,
      A.branch_code,
      A.sender_id,
      B.staff_name AS sender_name,
      DATE_FORMAT(A.send_time, '%Y-%m-%d %H:%i:%s') AS send_time,
      A.receiver_id,
      C.staff_name AS receiver_name,
      DATE_FORMAT(A.receive_time, '%Y-%m-%d %H:%i:%s') AS receive_time,
      A.business_status,
      CASE WHEN A.business_status = '0' THEN '等待回复'
          WHEN A.business_status = '1' THEN '接单'
          WHEN A.business_status = '2' THEN '拒绝'
          WHEN A.business_status = '3' THEN '完结'
          WHEN A.business_status = '4' THEN '回呼'
          ELSE '未知数据状态'
      END AS business_status_text,
      A.callback_id,
      D.callback_msg,
      IFNULL(A.complete_time, '') AS complete_time,
      IFNULL(B.staff_name, '管理员') AS create_user,
      DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,
      IFNULL(B.staff_name, '管理员') AS update_user,
      DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time
    FROM bank_worker_balance.business_flow A
    LEFT JOIN bank_worker_base.bank_branch_staff B
    ON A.sender_id = B.staff_id
    AND A.bank_code = B.bank_code
    AND A.branch_code = B.branch_code
    LEFT JOIN bank_worker_base.bank_branch_staff C
    ON A.receiver_id = C.staff_id
    AND A.bank_code = C.bank_code
    AND A.branch_code = C.branch_code
    LEFT JOIN bank_worker_balance.business_callback_mapping D
    ON A.callback_id = D.callback_id
    AND A.bank_code = D.bank_code
    AND A.branch_code = D.branch_code

    WHERE A.bank_code = #{arg0,jdbcType=VARCHAR}
    AND A.branch_code = #{arg1,jdbcType=VARCHAR}
    AND A.sender_id = #{arg2,jdbcType=INTEGER}
    AND to_days(A.send_time) = to_days(now())
    ORDER BY A.update_time DESC;
  </select>

  <insert id="insert" parameterType="com.johnny.bankworker.entity.BusinessFlowEntity" >
    INSERT INTO bank_worker_balance.business_flow (
      bank_code,
      branch_code,
      sender_id,
      receiver_id,
      create_user,
      update_user
    )
    VALUES (
      #{bankCode, jdbcType=VARCHAR},
      #{branchCode, jdbcType=VARCHAR},
      #{senderID, jdbcType=INTEGER},
      #{receiverID, jdbcType=INTEGER},
      #{createUser, jdbcType=VARCHAR},
      #{updateUser, jdbcType=VARCHAR}
    )
  </insert>

  <update id="updateBusinessStatus" parameterType="com.johnny.bankworker.entity.BusinessFlowEntity" >
    UPDATE bank_worker_balance.business_flow SET
      business_status = #{businessStatus,jdbcType=VARCHAR},
      receive_time = #{receiveTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR}
    WHERE bank_code = #{bankCode,jdbcType=VARCHAR}
    AND branch_code = #{branchCode,jdbcType=VARCHAR}
    AND business_id = #{businessID,jdbcType=INTEGER}
  </update>

  <update id="completeBusiness" parameterType="com.johnny.bankworker.entity.BusinessFlowEntity" >
    UPDATE bank_worker_balance.business_flow SET
      business_status = #{businessStatus,jdbcType=VARCHAR},
      complete_time = #{completeTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR}
    WHERE bank_code = #{bankCode,jdbcType=VARCHAR}
    AND branch_code = #{branchCode,jdbcType=VARCHAR}
    AND business_id = #{businessID,jdbcType=INTEGER}
  </update>

  <update id="updateCallBack" parameterType="com.johnny.bankworker.entity.BusinessFlowEntity" >
    UPDATE bank_worker_balance.business_flow SET
      business_status = #{businessStatus,jdbcType=VARCHAR},
      callback_id = #{callbackID,jdbcType=INTEGER},
      update_user = #{updateUser,jdbcType=VARCHAR}
    WHERE bank_code = #{bankCode,jdbcType=VARCHAR}
    AND branch_code = #{branchCode,jdbcType=VARCHAR}
    AND business_id = #{businessID,jdbcType=INTEGER}
  </update>

</mapper>